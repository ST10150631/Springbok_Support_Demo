<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:fa ="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    
    <!-- Images -->
    <!-- Normal Background Images -->
    <Style x:Key="BackgroundHome" TargetType="Grid">
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/Img/MainWindow BG.PNG"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Buttons -->
    <!--*******************************************************************************************************************************************************************************-->
    <!-- Home Buttons -->

    <!-- Category Buttons -->
    <Style TargetType="Button" x:Key="CategoryButtonStyle">
        <Setter Property="Height" Value="135"/>
        <Setter Property="Width" Value="135"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Margin" Value="5"/>
    </Style>

    <!-- Event/ Announcement RadioButtons -->
    <Style x:Key="RbtnSwitch" TargetType="RadioButton">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="Background" Value="{DynamicResource TertiaryBrush}"/>
        <Setter Property="FontSize" Value="50"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock x:Name="textBlock"
                                       Text="{TemplateBinding Content}"
                                       VerticalAlignment="Center" 
                                       Background="{DynamicResource TertiaryBrush}" 
                                       Foreground="{DynamicResource PrimaryBrush}"/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="textBlock" Property="Foreground" Value="{DynamicResource MenuBrush}"/>
                            <Setter TargetName="textBlock"  Property="Background" Value="{DynamicResource SecondaryBrush}" />
                            <Setter TargetName="textBlock" Property="TextDecorations" Value="{x:Static TextDecorations.Underline}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!-- Menu Button For Report-->
    <Style x:Key="MenuReportBtnStyle" TargetType="Button">
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource SecondaryBrush}"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <!-- Image -->
                        <Image x:Name="MenuImage"
                                   Source="/Img/Grid02.gif" 
                                   Stretch="Fill" 
                                   Width="{TemplateBinding Width}" 
                                   Height="{TemplateBinding Height}"/>

                        <!-- Filter Overlay -->
                        <Border x:Name="FilterOverlay"
                                    Background="{DynamicResource MenuBrush}"
                                    Opacity="0.8"
                                    Width="{TemplateBinding Width}" 
                                    Height="{TemplateBinding Height}"
                                    Visibility="Visible"/>
                        <TextBlock x:Name="MenuText"
                                   Text="Report An Issue"
                                   TextWrapping="Wrap"
                                   Style="{DynamicResource TitleTertiary}"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
            
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Margin" Value="0,0,0,0"/>
                <Setter Property="Foreground" Value="{DynamicResource TertiaryBrush}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid>
                                <!-- GIF Image -->
                                <Image x:Name="MenuImage"
                           Source="/Img/Grid02.gif" 
                           Stretch="Fill" 
                           Width="{TemplateBinding Width}" 
                           Height="{TemplateBinding Height}"/>
                                

                                <!-- Filter Overlay -->
                                <Border x:Name="FilterOverlay"
                                    Background="{DynamicResource MenuBrush}"
                                    Opacity="0.8"
                                    Width="{TemplateBinding Width}" 
                                    Height="{TemplateBinding Height}"
                                    Visibility="Visible"/>
                                <TextBlock x:Name="MenuText"
                                   Text="Report An Issue"
                                   TextWrapping="Wrap"
                                   Style="{DynamicResource TitleTertiary}"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- Menu Button For News -->
    <Style x:Key="MenuNewsBtnStyle" TargetType="Button">
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource SecondaryBrush}"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <!-- Image -->
                        <Image x:Name="MenuImage"
                           Source="/Img/NewsBtnImage.jpg" 
                           Stretch="Fill" 
                           Width="{TemplateBinding Width}" 
                           Height="{TemplateBinding Height}"/>

                        <!-- Filter Overlay -->
                        <Border x:Name="FilterOverlay"
                            Background="{DynamicResource MenuBrush}"
                            Opacity="0.8"
                            Width="{TemplateBinding Width}" 
                            Height="{TemplateBinding Height}"
                            Visibility="Visible"/>
                        <TextBlock x:Name="MenuText"
                               Text="Announcements and Local Events"
                               TextWrapping="Wrap"
                               Style="{DynamicResource TitleTertiary}"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Margin" Value="0,0,0,0"/>
                <Setter Property="Foreground" Value="{DynamicResource TertiaryBrush}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid>
                                <!-- Image -->
                                <Image x:Name="MenuImage"
                                   Source="/Img/NewsBtnImage.jpg" 
                                   Stretch="Fill" 
                                   Width="{TemplateBinding Width}" 
                                   Height="{TemplateBinding Height}"/>

                                <!-- Filter Overlay -->
                                <Border x:Name="FilterOverlay"
                                    Background="{DynamicResource MenuBrush}"
                                    Opacity="0.8"
                                    Width="{TemplateBinding Width}" 
                                    Height="{TemplateBinding Height}"
                                    Visibility="Visible"/>
                                <TextBlock x:Name="MenuText"
                                       Text="Announcements and Local Events"
                                       TextWrapping="Wrap"
                                       Style="{DynamicResource TitleTertiary}"
                                       Foreground="{DynamicResource TertiaryBrush}"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


    <!-- Menu Button For Service Status-->
    <Style x:Key="MenuStatusBtnStyle" TargetType="Button">
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource SecondaryBrush}"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <!-- Image -->
                        <Image x:Name="MenuImage"
                            Source="/Img/ServiceReqImg.jpg" 
                            Stretch="Fill" 
                            Width="{TemplateBinding Width}" 
                            Height="{TemplateBinding Height}"/>

                        <!-- Filter Overlay -->
                        <Border x:Name="FilterOverlay"
                             Background="Gray"
                             Opacity="0.8"
                             Width="{TemplateBinding Width}" 
                             Height="{TemplateBinding Height}"
                             Visibility="Visible"/>
                        <fa:IconImage Icon="Lock" Foreground="{DynamicResource MenuBrush}" Margin="10"/>
                        <TextBlock x:Name="MenuText"
                               Text="Service Status"
                                   TextWrapping="Wrap"
                               Style="{DynamicResource TitleTertiary}"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Margin" Value="0,0,0,0"/>
                <Setter Property="Foreground" Value="{DynamicResource TertiaryBrush}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid>
                                <!-- GIF Image -->
                                <Image x:Name="MenuImage"
                    Source="/Img/ServiceReqImg.jpg" 
                    Stretch="Fill" 
                    Width="{TemplateBinding Width}" 
                    Height="{TemplateBinding Height}"/>

                                <!-- Filter Overlay -->
                                <Border x:Name="FilterOverlay"
                     Background="Black"
                     Opacity="0.8"
                     Width="{TemplateBinding Width}" 
                     Height="{TemplateBinding Height}"
                     Visibility="Visible"/>
                                <fa:IconImage Icon="Lock" Foreground="{DynamicResource MenuBrush}" Margin="10"/>
                                <TextBlock x:Name="MenuText"
                                   Text="Service Status"
                                   TextWrapping="Wrap"
                                   Style="{DynamicResource TitleTertiary}"
                                           Foreground="{DynamicResource MenuBrush}"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Old Code :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: -->


        <!--*******************************************************************************************************************************************************************************-->


        <!-- Buttons -->

        <!-- ComboBx Primary -->
        <Style x:Name="CmboBxPrimary" TargetType="ComboBox">
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
            <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource TertiaryBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
        </Style>
        <!-- Creating a style for menu buttons -->
        <Style x:Key="menuButton" TargetType="RadioButton">
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Height" Value="5,0,0,5"/>
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{DynamicResource  ForegroundBrush}" />
            <Setter Property="BorderBrush"  Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border Background="{TemplateBinding Background}" BorderThickness="2,0,0,0"
                    BorderBrush="{TemplateBinding BorderBrush}" >
                            <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>

                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <!-- If Button is hovered over-->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Margin" Value="0,0,0,5"/>
                    <Setter Property="Background" Value="{DynamicResource TertiaryBrush}"/>
                    <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
                    <Setter Property="BorderBrush"  Value="{DynamicResource TertiaryBrush}" />
                </Trigger>
                <!-- If Button is clicked-->
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Margin" Value="0,0,0,5"/>
                    <Setter Property="Background" Value="{DynamicResource SecondaryBrush}"/>
                    <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
                    <Setter Property="BorderBrush"  Value="{DynamicResource SecondaryBrush}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <!-- Menu Button Icon -->
        <Style x:Key="menuButtonIcon" TargetType="fa:IconImage">
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
            <Setter Property="Width" Value="22" />
            <Setter Property="Height" Value="22"/>
            <Setter Property="Margin" Value="35,0,20,0"/>

        </Style>

        <!-- Menu Button Text-->
        <Style x:Key="menuButtonText" TargetType="TextBlock">
            <Setter Property="Foreground" Value= "{DynamicResource ForegroundBrush}"/>
            <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="Width" Value="200" />
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <!--Pill Buttons-->
        <!-- PILL BUTTON Primary: -->
        <Style x:Key="btnPrimary" TargetType="Button">
            <Setter Property="Background" Value="{DynamicResource MenuBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FontFamily" Value="Montserrat"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="30"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="Template" >
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                                    CornerRadius="10"
                                    Background="{TemplateBinding Background}">
                            <ContentPresenter VerticalAlignment="Center"
                                                  HorizontalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!-- Trigger -->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">

                    <Setter Property="Margin" Value="0,0,10,10"/>
                    <Setter Property="Background" Value="{DynamicResource TertiaryBrush}"/>
                </Trigger>
            </Style.Triggers>


        </Style>
        <!-- Primary Button Icon -->
        <Style x:Key="PrimaryButtonIcon" TargetType="fa:IconImage">
            <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}" />
            <Setter Property="Width" Value="22" />
            <Setter Property="Height" Value="22"/>
            <Setter Property="Margin" Value="10,0,20,0"/>

        </Style>
        <!-- Primary Button Text-->
        <Style x:Key="PrimaryButtonText" TargetType="TextBlock">
            <Setter Property="Foreground" Value= "{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
            <Setter Property="FontFamily" Value="Montserrat"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="FontSize" Value="13.5"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>



        <!-- Star/Stop RadioButton -->

        <Style x:Key="RbtnStartStop" TargetType="RadioButton">
            <Setter Property="Background" Value="{DynamicResource SecondaryBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ForegroundBrush}"/>
            <Setter Property="Width" Value="100"/>
            <Setter Property="Height" Value="100"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FontFamily" Value="Montserrat"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Template" >
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border
                                    CornerRadius="50"
                                    Background="{TemplateBinding Background}">
                            <ContentPresenter VerticalAlignment="Center"
                                                  HorizontalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!-- Trigger -->
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Background" Value="{DynamicResource TertiaryBrush}"/>
                    <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>

                </Trigger>
            </Style.Triggers>
        </Style>







     



        <!-- Rounded Window Btns-->
        <Style x:Key="RoundedWindowBtn" TargetType="Button">
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
            <Setter Property="FontWeight" Value="ExtraBold"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Width" Value="25" />
            <Setter Property="Height" Value="25" />
            <Setter Property="VerticalAlignment" Value="Center"/>

            <Setter Property="Template" >
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                              CornerRadius="50"
                              Background="{TemplateBinding Background}">
                            <ContentPresenter VerticalAlignment="Center"
                                            HorizontalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <!--#region Music Player Buttons -->
        <Style x:Key="btnMusic" TargetType="Button">
            <Setter Property="Background" Value="{DynamicResource  TertiaryBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FontFamily" Value="Montserrat"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template" >
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                                    CornerRadius="50"
                                    Background="{TemplateBinding Background}">
                            <ContentPresenter VerticalAlignment="Center"
                                                  HorizontalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!-- Trigger -->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">

                    <Setter Property="Margin" Value="0,0,2,2"/>
                    <Setter Property="Background" Value="{DynamicResource SecondaryBrush}"/>
                    <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
                </Trigger>
            </Style.Triggers>


        </Style>


        <!--#EndRegion Music Player Buttons -->




        <!-- Home page buttons-->
        <Style x:Key="HomeButtons" TargetType="Button">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FontFamily" Value="Montserrat"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Height" Value="80"/>
            <Setter Property="Width" Value="80"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Template" >
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            CornerRadius="10"
                            Background="{TemplateBinding Background}">
                            <ContentPresenter VerticalAlignment="Center"
                                          HorizontalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Margin" Value="0,0,10,10"/>
                </Trigger>
            </Style.Triggers>

        </Style>


        <!-- Home Page Button Text-->
        <Style x:Key="HomeBtnTxt" TargetType="TextBlock">
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="FontFamily" Value="Montserrat"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="White"/>

        </Style>

        <!-- Menu Panel -->
        <Style x:Key="MainMenu" TargetType="Border">
            <Setter Property="Background" Value="{DynamicResource TertiaryBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource TertiaryBrush}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Width" Value="24"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="CornerRadius" Value="0,0,0,10" />


            <!-- If Menu is hovered over -->

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Margin" Value="0,0,0,5"/>
                    <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
                    <Setter Property="BorderBrush"  Value="{DynamicResource TertiaryBrush}" />
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="Width" Value="230"/>
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                </Trigger>
            </Style.Triggers>


        </Style>


        <!-- Login Menu-->

        <Style x:Key="LoginMenu" TargetType="Menu">
            <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
            <Setter Property="BorderBrush" Value="#000000"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="TextBlock.FontSize" Value="30"/>

        </Style>





        <!--*******************************************************************************************************************************************************************************-->



        <!--*******************************************************************************************************************************************************************************-->
        <!-- Text -->

        <!-- Primary Title -->
        <Style x:Key="TitlePrimary" TargetType="TextBlock">

        <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
            <Setter Property="FontSize" Value="30"/>
            <Setter Property="FontFamily" Value="Montserrat"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontWeight" Value="Medium"/>
        </Style>

    <Style x:Key="TitleForeground" TargetType="TextBlock">

        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="FontSize" Value="30"/>
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="Medium"/>
    </Style>
    <Style x:Key="TitleTertiary" TargetType="TextBlock">

        <Setter Property="Foreground" Value="{DynamicResource TertiaryBrush}"/>
        <Setter Property="FontSize" Value="36"/>
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="Medium"/>
    </Style>

    <!-- Primary Text Style -->

        <Style x:Key="TxtPrimary" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="FontFamily" Value="Montserrat"/>

        </Style>

        <!-- Secondary Text Style -->

        <Style x:Key="TxtSecondary" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="FontFamily" Value="Montserrat"/>

        </Style>

        <!--  TextBox Primary Theme-->
        <Style x:Key="TxtBxPrimary" TargetType="TextBox" >
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="{DynamicResource ForegroundBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
            <Setter Property="BorderThickness" Value="0.5"/>
            <Style.Triggers>
                <!-- If Button is hovered over-->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Margin" Value="0,0,0,5"/>
                    <Setter Property="Background" Value="{DynamicResource SecondaryBrush}"/>
                    <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
                    <Setter Property="BorderBrush"  Value="{DynamicResource SecondaryBrush}" />
                </Trigger>
                <!-- If Button is clicked-->
                <Trigger Property="IsKeyboardFocused"  Value="True">
                    <Setter Property="Margin" Value="0,0,0,5"/>
                    <Setter Property="Background" Value="{DynamicResource ForegroundBrush}"/>
                    <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
                    <Setter Property="BorderBrush"  Value="{DynamicResource PrimaryBrush}" />
                </Trigger>
            </Style.Triggers>

        </Style>


        <!-- TextBox Incorrect Value -->
        <Style x:Key="TxtBxInvalid" TargetType="TextBox" >
            <Setter Property="Background" Value="#ff6459" />
            <Setter Property="BorderBrush" Value="#fc2617"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
            <Setter Property="BorderThickness" Value="0.5"/>
        </Style>

        <!--  Password Primary Theme-->
        <Style x:Key="PwBxPrimary" TargetType="PasswordBox" >
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="{DynamicResource ForegroundBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
            <Setter Property="BorderThickness" Value="0.5"/>
            <Style.Triggers>
                <!-- If Button is hovered over-->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Margin" Value="0,0,0,5"/>
                    <Setter Property="Background" Value="{DynamicResource SecondaryBrush}"/>
                    <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
                    <Setter Property="BorderBrush"  Value="{DynamicResource SecondaryBrush}" />
                </Trigger>
                <!-- If Button is clicked-->
                <Trigger Property="IsKeyboardFocused"  Value="True">
                    <Setter Property="Margin" Value="0,0,0,5"/>
                    <Setter Property="Background" Value="{DynamicResource ForegroundBrush}"/>
                    <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
                    <Setter Property="BorderBrush"  Value="{DynamicResource PrimaryBrush}" />
                </Trigger>
            </Style.Triggers>

        </Style>

        <!--*******************************************************************************************************************************************************************************-->

        <!-- Datagrid Haeders -->
        <Style x:Key="ColHeaders" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
            <Setter Property="Background" Value="{DynamicResource SecondaryBrush}"/>
        </Style>

        <!-- Datagrid -->
        <Style x:Key="DataGrdPrimary" TargetType="DataGrid" >
            <Setter Property="Background" Value="{DynamicResource MenuBrush}"/>
            <Setter Property="Margin" Value="0"/>

        </Style>







</ResourceDictionary>